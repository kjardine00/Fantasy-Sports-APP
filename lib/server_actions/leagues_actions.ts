'use server';

import { redirect } from 'next/navigation';
import { createClient } from '@/lib/database/server';
import { League, LeagueMember } from '@/lib/types/database_types';
import { createLeague } from '@/lib/database/queries/leagues_queries';
import { setLeagueComissioner } from '@/lib/database/queries/leagues_members_queries';
import { AlertType } from '../types/alert_types';
import { useAlert } from '@/app/components/Alert/AlertContext';

export class LeagueService {
  static async createLeague(formData: FormData) {
    const supabase = await createClient();
    const { data: { user } } = await supabase.auth.getUser();
    if (!user) {
      return { error: 'You must be logged in to create a league' };
    }
    
    const name = formData.get('name') as string;
    const numberOfTeams = formData.get('numberOfTeams') as string;
    const useChemistry = formData.get('useChemistry') as string;
    const duplicatePlayers = formData.get('duplicatePlayers') as string;
    
    const settings = {
      numberOfTeams,
      useChemistry,
      duplicatePlayers
    };
  
    const newLeague : League = {
      // id: is generated by the database
      name,
      owner_id: user.id,
      draft_completed: false,
      // created_at: is generated by the database
      settings
    }
    
    const { data: league, error: leagueError } = await createLeague(newLeague)

    if (leagueError) {
        return { data: null, error: leagueError.message }
    }

    const newLeagueComissioner : LeagueMember = {
      league_id: league.id,
      user_id: user.id,
      role: "commissioner",
      draft_pick_order: null
      // created_at: is generated by the database
    }

    const {error: memberError } = await setLeagueComissioner(newLeagueComissioner)

    if (memberError) {
      return { data: league, error: memberError.message }
    }
}

  // Redirect to the new league
  // redirect(`/league/${newLeague.id}`); TODO: I need to move this to the app I think
}
